,Method,Dataset,Rand Index,Silhouette Score,Davies Bouldin Score,Time,Rand Score with initial clustering
0,kmeans,Moons,"(0.6237458193979933, 0.0)","(0.4889805413589823, 0.0)","(np.float64(0.7795631165460319), np.float64(0.0))","(0.0026638000272214413, 0.0)",
1,dbscan,Moons,"(1.0, 0.0)","(0.3302918266468292, 0.0)","(np.float64(1.1597085036295556), np.float64(0.0))","(0.001728600007481873, 0.0)",
2,LP (Balanced) Heuristic starting with everyone alone,Moons,"(0.6339799331103679, 0.0)","(0.4891416115811062, 0.0)","(np.float64(0.7797727821082265), np.float64(0.0))","(4.404243499971926, 0.0)",
3,LP (Balanced) Heuristic starting with predicted number of clusters,Moons,"(0.6339799331103679, 0.0)","(0.4891416115811062, 0.0)","(np.float64(0.7797727821082265), np.float64(0.0))","(0.29540539998561144, 0.0)",
4,LP (Balanced) Heuristic starting with the output of k-means,Moons,"(0.6339799331103679, 0.0)","(0.4891416115811062, 0.0)","(np.float64(0.7797727821082265), np.float64(0.0))","(0.30055929999798536, 0.0)","(np.float64(0.4991304347826087), np.float64(0.0))"
5,LP (Balanced) Heuristic starting with the output of dbscan,Moons,"(0.6339799331103679, 0.0)","(0.4891416115811062, 0.0)","(np.float64(0.7797727821082265), np.float64(0.0))","(0.28936179995071143, 0.0)",
6,LP (Friend-Oriented) Heuristic starting with everyone alone,Moons,"(0.6057748049052397, 0.0)","(0.3002813132418157, 0.0)","(np.float64(0.7168343981910116), np.float64(0.0))","(4.595066400012001, 0.0)",
7,LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082261), np.float64(0.0))","(0.2900822999654338, 0.0)",
8,LP (Friend-Oriented) Heuristic starting with the output of k-means,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082261), np.float64(0.0))","(0.2810585000552237, 0.0)","(np.float64(0.5055518394648829), np.float64(0.0))"
9,LP (Friend-Oriented) Heuristic starting with the output of dbscan,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082261), np.float64(0.0))","(0.2955731999827549, 0.0)",
10,LP (Enemy-Averse) Heuristic starting with everyone alone,Moons,"(0.597881828316611, 0.0)","(0.21109394917531457, 0.0)","(np.float64(0.7504418788478212), np.float64(0.0))","(3.7878116000210866, 0.0)",
11,LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082264), np.float64(0.0))","(0.2915935000637546, 0.0)",
12,LP (Enemy-Averse) Heuristic starting with the output of k-means,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082264), np.float64(0.0))","(0.28888840007130057, 0.0)","(np.float64(0.5015384615384615), np.float64(0.0))"
13,LP (Enemy-Averse) Heuristic starting with the output of dbscan,Moons,"(0.6339799331103679, 0.0)","(0.48914161158110614, 0.0)","(np.float64(0.7797727821082264), np.float64(0.0))","(0.2982512000016868, 0.0)",
14,kmeans,3 Circles,"(0.796923076923077, 0.0)","(0.37208150226150205, 0.0)","(np.float64(0.9518095866030025), np.float64(0.0))","(0.0024346000282093883, 0.0)",
15,dbscan,3 Circles,"(0.3311036789297659, 0.0)","(nan, 0.0)",,"(0.002188700018450618, 0.0)",
16,LP (Balanced) Heuristic starting with everyone alone,3 Circles,"(0.7400445930880714, 0.0)","(0.49115850372989805, 0.0)","(np.float64(0.7394766112425962), np.float64(0.0))","(4.031313800020143, 0.0)",
17,LP (Balanced) Heuristic starting with predicted number of clusters,3 Circles,"(0.7400445930880714, 0.0)","(0.49115850372989805, 0.0)","(np.float64(0.7394766112425962), np.float64(0.0))","(0.32004550006240606, 0.0)",
18,LP (Balanced) Heuristic starting with the output of k-means,3 Circles,"(0.7400445930880714, 0.0)","(0.49115850372989805, 0.0)","(np.float64(0.7394766112425962), np.float64(0.0))","(0.3112817000364885, 0.0)","(np.float64(0.5170791527313267), np.float64(0.0))"
19,LP (Balanced) Heuristic starting with the output of dbscan,3 Circles,"(0.7400445930880714, 0.0)","(0.49115850372989805, 0.0)","(np.float64(0.7394766112425962), np.float64(0.0))","(0.3119942001067102, 0.0)",
20,LP (Friend-Oriented) Heuristic starting with everyone alone,3 Circles,"(0.5805797101449275, 0.0)","(0.4142370607050321, 0.0)","(np.float64(0.7468269706695742), np.float64(0.0))","(4.326177900074981, 0.0)",
21,LP (Friend-Oriented) Heuristic starting with predicted number of clusters,3 Circles,"(0.5666220735785953, 0.0)","(0.11989332749805397, 0.0)","(np.float64(0.7354432738122275), np.float64(0.0))","(0.3599562000017613, 0.0)",
22,LP (Friend-Oriented) Heuristic starting with the output of k-means,3 Circles,"(0.7418283166109253, 0.0)","(0.4741556744824561, 0.0)","(np.float64(0.7397845487556028), np.float64(0.0))","(0.32362070004455745, 0.0)","(np.float64(0.5170791527313267), np.float64(0.0))"
23,LP (Friend-Oriented) Heuristic starting with the output of dbscan,3 Circles,"(0.7400445930880714, 0.0)","(0.49115850372989805, 0.0)","(np.float64(0.7394766112425968), np.float64(0.0))","(0.32460339996032417, 0.0)",
24,LP (Enemy-Averse) Heuristic starting with everyone alone,3 Circles,"(0.7941806020066889, 0.0)","(-0.08027392650735407, 0.0)","(np.float64(1.0287952185173836), np.float64(0.0))","(3.791244100080803, 0.0)",
25,LP (Enemy-Averse) Heuristic starting with predicted number of clusters,3 Circles,"(0.7176588628762541, 0.0)","(0.337294768338387, 0.0)","(np.float64(5.785550774721582), np.float64(0.0))","(0.3034488999983296, 0.0)",
26,LP (Enemy-Averse) Heuristic starting with the output of k-means,3 Circles,"(0.8097881828316611, 0.0)","(0.36680617534627735, 0.0)","(np.float64(0.9577623118023396), np.float64(0.0))","(0.2988411000696942, 0.0)","(np.float64(0.34343366778149387), np.float64(0.0))"
27,LP (Enemy-Averse) Heuristic starting with the output of dbscan,3 Circles,"(0.8097881828316611, 0.0)","(0.36680617534627735, 0.0)","(np.float64(0.9577623118023396), np.float64(0.0))","(0.30168540007434785, 0.0)",
28,kmeans,Cancer,"(0.7503774845912028, 0.0)","(0.6972646156059465, 0.0)","(np.float64(0.5044035685410988), np.float64(0.0))","(0.003292500041425228, 0.0)",
29,dbscan,Cancer,"(0.531646822941162, 0.0)","(nan, 0.0)",,"(0.0028640999225899577, 0.0)",
30,LP (Balanced) Heuristic starting with everyone alone,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.4012433834233501), np.float64(0.0))","(26.49172449996695, 0.0)",
31,LP (Balanced) Heuristic starting with predicted number of clusters,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.4012433834233501), np.float64(0.0))","(1.0671339000109583, 0.0)",
32,LP (Balanced) Heuristic starting with the output of k-means,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.4012433834233501), np.float64(0.0))","(1.0427383000496775, 0.0)","(np.float64(0.9452461694596401), np.float64(0.0))"
33,LP (Balanced) Heuristic starting with the output of dbscan,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.4012433834233501), np.float64(0.0))","(1.0443886999273673, 0.0)",
34,LP (Friend-Oriented) Heuristic starting with everyone alone,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.40124338342335), np.float64(0.0))","(31.08646309992764, 0.0)",
35,LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.40124338342335), np.float64(0.0))","(1.0732729999581352, 0.0)",
36,LP (Friend-Oriented) Heuristic starting with the output of k-means,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.40124338342335), np.float64(0.0))","(1.0486851999303326, 0.0)","(np.float64(0.9452461694596401), np.float64(0.0))"
37,LP (Friend-Oriented) Heuristic starting with the output of dbscan,Cancer,"(0.5475878115794945, 0.0)","(0.7019444975927204, 0.0)","(np.float64(0.40124338342335), np.float64(0.0))","(1.0408531998982653, 0.0)",
38,LP (Enemy-Averse) Heuristic starting with everyone alone,Cancer,"(0.5916792494863734, 0.0)","(0.6499030468657834, 0.0)","(np.float64(0.3804816986897921), np.float64(0.0))","(26.898113800096326, 0.0)",
39,LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Cancer,"(0.5760538627193742, 0.0)","(0.6608244379420809, 0.0)","(np.float64(0.4896874818628024), np.float64(0.0))","(1.0879814000800252, 0.0)",
40,LP (Enemy-Averse) Heuristic starting with the output of k-means,Cancer,"(0.5860169806183322, 0.0)","(0.662277549867417, 0.0)","(np.float64(0.4896287619993636), np.float64(0.0))","(1.06827309995424, 0.0)","(np.float64(0.8511225525384292), np.float64(0.0))"
41,LP (Enemy-Averse) Heuristic starting with the output of dbscan,Cancer,"(0.5860169806183322, 0.0)","(0.662277549867417, 0.0)","(np.float64(0.4896287619993636), np.float64(0.0))","(1.0676543000154197, 0.0)",
42,kmeans,Iris,"(0.8797315436241611, 0.0)","(0.5528190123564095, 0.0)","(np.float64(0.6619715465007457), np.float64(0.0))","(0.0023218999849632382, 0.0)",
43,dbscan,Iris,"(0.42451901565995526, 0.0)","(0.18256428323870064, 0.0)","(np.float64(0.627599582254016), np.float64(0.0))","(0.0014587000478059053, 0.0)",
44,LP (Balanced) Heuristic starting with everyone alone,Iris,"(0.759821029082774, 0.0)","(0.6772307917547696, 0.0)","(np.float64(0.4145277842651928), np.float64(0.0))","(0.5180235999869183, 0.0)",
45,LP (Balanced) Heuristic starting with predicted number of clusters,Iris,"(0.759821029082774, 0.0)","(0.6772307917547696, 0.0)","(np.float64(0.4145277842651928), np.float64(0.0))","(0.07948299997951835, 0.0)",
46,LP (Balanced) Heuristic starting with the output of k-means,Iris,"(0.759821029082774, 0.0)","(0.6772307917547696, 0.0)","(np.float64(0.4145277842651928), np.float64(0.0))","(0.09357199992518872, 0.0)","(np.float64(0.5131096196868009), np.float64(0.0))"
47,LP (Balanced) Heuristic starting with the output of dbscan,Iris,"(0.759821029082774, 0.0)","(0.6772307917547696, 0.0)","(np.float64(0.4145277842651928), np.float64(0.0))","(0.08907939994242042, 0.0)",
48,LP (Friend-Oriented) Heuristic starting with everyone alone,Iris,"(0.7762863534675615, 0.0)","(0.6867350732769777, 0.0)","(np.float64(0.38275284210068855), np.float64(0.0))","(0.506822400027886, 0.0)",
49,LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Iris,"(0.7719015659955257, 0.0)","(0.6857881712617192, 0.0)","(np.float64(0.3885516762710369), np.float64(0.0))","(0.07969189994037151, 0.0)",
50,LP (Friend-Oriented) Heuristic starting with the output of k-means,Iris,"(0.7762863534675615, 0.0)","(0.6867350732769777, 0.0)","(np.float64(0.38275284210068855), np.float64(0.0))","(0.08643800008576363, 0.0)","(np.float64(0.5481879194630872), np.float64(0.0))"
51,LP (Friend-Oriented) Heuristic starting with the output of dbscan,Iris,"(0.7762863534675615, 0.0)","(0.6867350732769777, 0.0)","(np.float64(0.38275284210068855), np.float64(0.0))","(0.09467549994587898, 0.0)",
52,LP (Enemy-Averse) Heuristic starting with everyone alone,Iris,"(0.7377181208053691, 0.0)","(0.15343877220531663, 0.0)","(np.float64(1.2051694780632363), np.float64(0.0))","(0.49314649996813387, 0.0)",
53,LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Iris,"(0.7884563758389261, 0.0)","(0.30575329951179153, 0.0)","(np.float64(1.1980608918073845), np.float64(0.0))","(0.0803951999405399, 0.0)",
54,LP (Enemy-Averse) Heuristic starting with the output of k-means,Iris,"(0.8679194630872483, 0.0)","(0.5517273991144693, 0.0)","(np.float64(0.6524278468644487), np.float64(0.0))","(0.09209599997848272, 0.0)","(np.float64(0.4243400447427293), np.float64(0.0))"
55,LP (Enemy-Averse) Heuristic starting with the output of dbscan,Iris,"(0.8679194630872483, 0.0)","(0.5517273991144693, 0.0)","(np.float64(0.6524278468644487), np.float64(0.0))","(0.08553530008066446, 0.0)",

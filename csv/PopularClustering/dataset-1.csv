Method,Dataset,Rand Index,Silhouette Score,Davies Bouldin Score,Time,Rand Score with initial clustering
kmeans,Moons,"(np.float64(0.6271125975473801), np.float64(0.0))","(np.float64(0.48872834979065716), np.float64(0.0))","(np.float64(0.7775503430285116), np.float64(0.0))","(0.002867099945433438, 0.0)",
dbscan,Moons,"(1.0, 0.0)","(np.float64(0.3293925704826526), np.float64(0.0))","(np.float64(1.1617205965394541), np.float64(0.0))","(0.0018259999342262745, 0.0)",
LP (Balanced) Heuristic starting with everyone alone,Moons,"(np.float64(0.6538015607580825), np.float64(0.0))","(np.float64(0.42532019367396723), np.float64(0.0))","(np.float64(0.8822543210256195), np.float64(0.0))","(5.010780400014482, 0.0)",
LP (Balanced) Heuristic starting with predicted number of clusters,Moons,"(np.float64(0.5055518394648829), np.float64(0.0))","(np.float64(0.20723327542252878), np.float64(0.0))","(np.float64(7.593367696625952), np.float64(0.0))","(0.29932880005799234, 0.0)",
LP (Balanced) Heuristic starting with the output of k-means,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168291), np.float64(0.0))","(0.3088463000021875, 0.0)","(np.float64(0.5005574136008919), np.float64(0.0))"
LP (Balanced) Heuristic starting with the output of dbscan,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168291), np.float64(0.0))","(0.29882859997451305, 0.0)",
LP (Friend-Oriented) Heuristic starting with everyone alone,Moons,"(np.float64(0.6538015607580825), np.float64(0.0))","(np.float64(0.4253201936739672), np.float64(0.0))","(np.float64(0.8822543210256194), np.float64(0.0))","(5.100708500016481, 0.0)",
LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168289), np.float64(0.0))","(0.3069801999954507, 0.0)",
LP (Friend-Oriented) Heuristic starting with the output of k-means,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168289), np.float64(0.0))","(0.3008949999930337, 0.0)","(np.float64(0.5015384615384615), np.float64(0.0))"
LP (Friend-Oriented) Heuristic starting with the output of dbscan,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168289), np.float64(0.0))","(0.296957700047642, 0.0)",
LP (Enemy-Averse) Heuristic starting with everyone alone,Moons,"(np.float64(0.6156075808249721), np.float64(0.0))","(np.float64(0.44925444337519943), np.float64(0.0))","(np.float64(0.7745607484637573), np.float64(0.0))","(4.189559999969788, 0.0)",
LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168292), np.float64(0.0))","(0.353890800033696, 0.0)",
LP (Enemy-Averse) Heuristic starting with the output of k-means,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168292), np.float64(0.0))","(0.29667690000496805, 0.0)","(np.float64(0.4984169453734671), np.float64(0.0))"
LP (Enemy-Averse) Heuristic starting with the output of dbscan,Moons,"(np.float64(0.6870457079152731), np.float64(0.0))","(np.float64(0.48655071993200055), np.float64(0.0))","(np.float64(0.7878156917168292), np.float64(0.0))","(0.30143869994208217, 0.0)",
kmeans,3 Circles,"(np.float64(0.8006911928651059), np.float64(0.0))","(np.float64(0.3625692152633893), np.float64(0.0))","(np.float64(0.9794380970041937), np.float64(0.0))","(0.002976299962028861, 0.0)",
dbscan,3 Circles,"(np.float64(0.3311036789297659), np.float64(0.0))",,,"(0.002527299919165671, 0.0)",
LP (Balanced) Heuristic starting with everyone alone,3 Circles,"(np.float64(0.7389074693422519), np.float64(0.0))","(np.float64(0.04404863397498763), np.float64(0.0))","(np.float64(0.8802079971223534), np.float64(0.0))","(4.098791200085543, 0.0)",
LP (Balanced) Heuristic starting with predicted number of clusters,3 Circles,"(np.float64(0.7670680044593088), np.float64(0.0))","(np.float64(0.323829793207368), np.float64(0.0))","(np.float64(0.8586739993592434), np.float64(0.0))","(0.3169939999934286, 0.0)",
LP (Balanced) Heuristic starting with the output of k-means,3 Circles,"(np.float64(0.7903010033444816), np.float64(0.0))","(np.float64(0.36670744620806867), np.float64(0.0))","(np.float64(0.9656592023811834), np.float64(0.0))","(0.30904210009612143, 0.0)","(np.float64(0.3331326644370123), np.float64(0.0))"
LP (Balanced) Heuristic starting with the output of dbscan,3 Circles,"(np.float64(0.7909698996655519), np.float64(0.0))","(np.float64(0.3627207807294728), np.float64(0.0))","(np.float64(0.9765320169631538), np.float64(0.0))","(0.3243378000333905, 0.0)",
LP (Friend-Oriented) Heuristic starting with everyone alone,3 Circles,"(np.float64(0.7389074693422519), np.float64(0.0))","(np.float64(0.044048633974987594), np.float64(0.0))","(np.float64(0.8802079971223536), np.float64(0.0))","(4.2928601000458, 0.0)",
LP (Friend-Oriented) Heuristic starting with predicted number of clusters,3 Circles,"(np.float64(0.7412040133779264), np.float64(0.0))","(np.float64(0.34771411107739864), np.float64(0.0))","(np.float64(1.6284378529647687), np.float64(0.0))","(0.3262927000178024, 0.0)",
LP (Friend-Oriented) Heuristic starting with the output of k-means,3 Circles,"(np.float64(0.7736677814938685), np.float64(0.0))","(np.float64(0.38177823257955007), np.float64(0.0))","(np.float64(0.8736277488568538), np.float64(0.0))","(0.30274939991068095, 0.0)","(np.float64(0.37933110367892975), np.float64(0.0))"
LP (Friend-Oriented) Heuristic starting with the output of dbscan,3 Circles,"(np.float64(0.7365217391304347), np.float64(0.0))","(np.float64(0.41016792382446954), np.float64(0.0))","(np.float64(0.8705181210674607), np.float64(0.0))","(0.29904990002978593, 0.0)",
LP (Enemy-Averse) Heuristic starting with everyone alone,3 Circles,"(np.float64(0.7383946488294314), np.float64(0.0))","(np.float64(0.051094233446729975), np.float64(0.0))","(np.float64(0.9769562815318166), np.float64(0.0))","(3.8984297000570223, 0.0)",
LP (Enemy-Averse) Heuristic starting with predicted number of clusters,3 Circles,"(np.float64(0.7670680044593088), np.float64(0.0))","(np.float64(0.323829793207368), np.float64(0.0))","(np.float64(0.8586739993592448), np.float64(0.0))","(0.3660201000748202, 0.0)",
LP (Enemy-Averse) Heuristic starting with the output of k-means,3 Circles,"(np.float64(0.7937346711259755), np.float64(0.0))","(np.float64(0.3643858141548175), np.float64(0.0))","(np.float64(0.9711691420931752), np.float64(0.0))","(0.3062114999629557, 0.0)","(np.float64(0.38414715719063547), np.float64(0.0))"
LP (Enemy-Averse) Heuristic starting with the output of dbscan,3 Circles,"(np.float64(0.7736677814938685), np.float64(0.0))","(np.float64(0.38177823257955007), np.float64(0.0))","(np.float64(0.8736277488568523), np.float64(0.0))","(0.3108296000864357, 0.0)",
kmeans,Cancer,"(np.float64(0.7503774845912028), np.float64(0.0))","(np.float64(0.6972646156059465), np.float64(0.0))","(np.float64(0.5044035685410988), np.float64(0.0))","(0.00339160009752959, 0.0)",
dbscan,Cancer,"(np.float64(0.531646822941162), np.float64(0.0))",,,"(0.0030863999854773283, 0.0)",
LP (Balanced) Heuristic starting with everyone alone,Cancer,"(np.float64(0.5744511002747593), np.float64(0.0))","(np.float64(0.6483887832663568), np.float64(0.0))","(np.float64(0.3833428227493989), np.float64(0.0))","(26.802833699970506, 0.0)",
LP (Balanced) Heuristic starting with predicted number of clusters,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089295), np.float64(0.0))","(np.float64(0.48413077056554454), np.float64(0.0))","(1.0600979999871925, 0.0)",
LP (Balanced) Heuristic starting with the output of k-means,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089295), np.float64(0.0))","(np.float64(0.48413077056554454), np.float64(0.0))","(1.0253111999481916, 0.0)","(np.float64(0.875133047847719), np.float64(0.0))"
LP (Balanced) Heuristic starting with the output of dbscan,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089295), np.float64(0.0))","(np.float64(0.48413077056554454), np.float64(0.0))","(1.034991499967873, 0.0)",
LP (Friend-Oriented) Heuristic starting with everyone alone,Cancer,"(np.float64(0.5744511002747593), np.float64(0.0))","(np.float64(0.648388783266357), np.float64(0.0))","(np.float64(0.38334282274939874), np.float64(0.0))","(29.794041899964213, 0.0)",
LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Cancer,"(np.float64(0.573318646501151), np.float64(0.0))","(np.float64(0.6639734385014703), np.float64(0.0))","(np.float64(0.4838163521922257), np.float64(0.0))","(1.0641932000871748, 0.0)",
LP (Friend-Oriented) Heuristic starting with the output of k-means,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089296), np.float64(0.0))","(np.float64(0.4841307705655445), np.float64(0.0))","(1.0379685999359936, 0.0)","(np.float64(0.875133047847719), np.float64(0.0))"
LP (Friend-Oriented) Heuristic starting with the output of dbscan,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089296), np.float64(0.0))","(np.float64(0.4841307705655445), np.float64(0.0))","(1.0151025000959635, 0.0)",
LP (Enemy-Averse) Heuristic starting with everyone alone,Cancer,"(np.float64(0.5744511002747593), np.float64(0.0))","(np.float64(0.6483887832663568), np.float64(0.0))","(np.float64(0.3833428227493987), np.float64(0.0))","(26.312475400045514, 0.0)",
LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089296), np.float64(0.0))","(np.float64(0.4841307705655444), np.float64(0.0))","(1.0545301000820473, 0.0)",
LP (Enemy-Averse) Heuristic starting with the output of k-means,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089296), np.float64(0.0))","(np.float64(0.4841307705655444), np.float64(0.0))","(1.0368341000285, 0.0)","(np.float64(0.875133047847719), np.float64(0.0))"
LP (Enemy-Averse) Heuristic starting with the output of dbscan,Cancer,"(np.float64(0.5746800663382757), np.float64(0.0))","(np.float64(0.6636794570089296), np.float64(0.0))","(np.float64(0.4841307705655444), np.float64(0.0))","(1.0233506000367925, 0.0)",
kmeans,Iris,"(np.float64(0.8797315436241611), np.float64(0.0))","(np.float64(0.5528190123564095), np.float64(0.0))","(np.float64(0.6619715465007464), np.float64(0.0))","(0.0023530999897047877, 0.0)",
dbscan,Iris,"(np.float64(0.42451901565995526), np.float64(0.0))","(np.float64(0.18256428323870058), np.float64(0.0))","(np.float64(0.6275995822540171), np.float64(0.0))","(0.0011645000195130706, 0.0)",
LP (Balanced) Heuristic starting with everyone alone,Iris,"(np.float64(0.7795973154362416), np.float64(0.0))","(np.float64(0.4061134457594074), np.float64(0.0))","(np.float64(0.5376438401936976), np.float64(0.0))","(0.5502760999370366, 0.0)",
LP (Balanced) Heuristic starting with predicted number of clusters,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786843), np.float64(0.0))","(0.07604040007572621, 0.0)",
LP (Balanced) Heuristic starting with the output of k-means,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786843), np.float64(0.0))","(0.0794338999548927, 0.0)","(np.float64(0.47364653243847876), np.float64(0.0))"
LP (Balanced) Heuristic starting with the output of dbscan,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786843), np.float64(0.0))","(0.09161320002749562, 0.0)",
LP (Friend-Oriented) Heuristic starting with everyone alone,Iris,"(np.float64(0.778165548098434), np.float64(0.0))","(np.float64(0.3996219721942136), np.float64(0.0))","(np.float64(0.5187452709443514), np.float64(0.0))","(0.524749799980782, 0.0)",
LP (Friend-Oriented) Heuristic starting with predicted number of clusters,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786862), np.float64(0.0))","(0.07814600004348904, 0.0)",
LP (Friend-Oriented) Heuristic starting with the output of k-means,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786861), np.float64(0.0))","(0.08183509996160865, 0.0)","(np.float64(0.4809843400447427), np.float64(0.0))"
LP (Friend-Oriented) Heuristic starting with the output of dbscan,Iris,"(np.float64(0.7756599552572707), np.float64(0.0))","(np.float64(0.5346795878242604), np.float64(0.0))","(np.float64(0.5531774814786861), np.float64(0.0))","(0.0887705999193713, 0.0)",
LP (Enemy-Averse) Heuristic starting with everyone alone,Iris,"(np.float64(0.7795973154362416), np.float64(0.0))","(np.float64(0.40611344575940733), np.float64(0.0))","(np.float64(0.5376438401936937), np.float64(0.0))","(0.5152487999293953, 0.0)",
LP (Enemy-Averse) Heuristic starting with predicted number of clusters,Iris,"(np.float64(0.7745861297539149), np.float64(0.0))","(np.float64(0.5429113975197982), np.float64(0.0))","(np.float64(0.9148291249644567), np.float64(0.0))","(0.07719600002747029, 0.0)",
LP (Enemy-Averse) Heuristic starting with the output of k-means,Iris,"(np.float64(0.7745861297539149), np.float64(0.0))","(np.float64(0.5429113975197982), np.float64(0.0))","(np.float64(0.9148291249644567), np.float64(0.0))","(0.08557300001848489, 0.0)","(np.float64(0.48563758389261746), np.float64(0.0))"
LP (Enemy-Averse) Heuristic starting with the output of dbscan,Iris,"(np.float64(0.7745861297539149), np.float64(0.0))","(np.float64(0.5429113975197982), np.float64(0.0))","(np.float64(0.9148291249644567), np.float64(0.0))","(0.08774430002085865, 0.0)",
